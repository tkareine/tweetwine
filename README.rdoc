= Tweetwine

A simple but tasty Twitter agent for command line use, made for fun.

== Installation

Install Tweetwine as a RubyGem from GitHub:

  $ sudo gem install tuomas-tweetwine --source http://gems.github.com

The program is compatible with Ruby 1.9.1, and it requires <b>rest_client</b>
gem to be installed. In addition, <b>json</b> gem is needed for Ruby 1.8.6.

== Usage

In the command line, run the program by entering

  $ tweetwine [options...] [command]

The program needs the user's username and password for authentication. This
information can be supplied either via a configuration file or as an option
(<tt>-a USERNAME:PASSWORD</tt>) to the program. It is recommended to use the
former method over the latter.

The configuration file, in <tt>~/.tweetwine</tt>, is in YAML syntax. The
program recognizes the following basic settings:

  username: <your_username>
  password: <your_password>
  colorize: true|false 

When invoking the program, the supported commands are

<tt>home</tt>:: Fetch friends' latest statuses (the contents of the authenticated user's home).
<tt>mentions</tt>:: Fetch latest mentions for the authenticated user.
<tt>user [name]</tt>:: Fetch a specific user's latest statuses, identified by the argument; if given no argument, fetch the statuses of the authenticated user.
<tt>update [status]</tt>:: Send a status update, but confirm the action first before actually sending. The status update can either be given as an argument or via STDIN if no argument is given.
<tt>friends</tt>:: Fetch friends and their latest statuses.
<tt>followers</tt>:: Fetch followers and their latest statuses.

If no <tt>[command]</tt> is given, the default action is <tt>home</tt>.

For all the options, see:

  $ tweetwine -h

=== URL shortening for status update

Before actually sending a status update, it is possible for the software to
shorten the URLs in the update by using an external web service. This can be
enabled via the <tt>shorten_urls</tt> key in configuration file; for
example:

  username: spoonman
  password: withyourhands
  colorize: true
  shorten_urls:
    enable: true
    service_url: http://is.gd/create.php
    method: post
    url_param_name: URL
    xpath_selector: //input[@id='short_url']/@value

The supported methods are <tt>get</tt> and <tt>post</tt>. The method chosen
affects whether parameters are passed as URL query parameters or as payload
in the HTTP request, respectively. Extra parameters can be given via
<tt>extra_params</tt> key, as a hash.

The <tt>xpath_selector</tt> is needed to extract the shortened URL from the
result.

The feature can be disabled by

* not defining <tt>shorten_urls</tt> key in the configuration file,
* setting key <tt>enable</tt> to <tt>false</tt>, or
* using the command line option <tt>--no-url-shorten</tt>.

The use of the feature requires <b>nokogiri</b> gem to be installed.

== Contacting

Please send feedback by email to Tuomas Kareinen < tkareine (at) gmail (dot)
com >.

== Legal notes

This software is licensed under the terms of the "MIT license":

Copyright (c) 2009 Tuomas Kareinen.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to
deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
IN THE SOFTWARE.
